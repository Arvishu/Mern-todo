{"version":3,"sources":["resources/logorugby.png","components/TodosList.js","components/EditTodo.js","components/CreateTodo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Todo","props","className","todo","todo_completed","todo_description","todo_responsible","todo_priority","to","_id","TodosList","state","todos","axios","get","then","response","setState","data","catch","error","console","log","this","map","currentTodo","i","key","style","marginTop","todoList","Component","EditTodo","onChangeTodoDescription","bind","onChangeTodoResponsible","onChangeTodoPriority","onChangeTodoCompleted","onSubmit","match","params","id","e","target","value","preventDefault","obj","post","res","history","push","type","onChange","name","checked","htmlFor","CreateTodo","newTodo","App","href","rel","src","logorugby","alt","width","height","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c854dcc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logorugby.c7bae480.png\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Todo = props =>(\n    <tr>\n        <td className={props.todo.todo_completed ? 'completed' : '' } >{props.todo.todo_description}</td>\n        <td className={props.todo.todo_completed ? 'completed' : '' } >{props.todo.todo_responsible}</td>\n        <td className={props.todo.todo_completed ? 'completed' : '' } >{props.todo.todo_priority}</td>\n        <td>\n            <Link to={\"/edit/\"+props.todo._id}>Edit</Link>\n        </td>\n    </tr>\n)\n\n\n\n\nexport default class TodosList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {todos: []};\n    }\n\n    componentDidMount() {\naxios.get('http://localhost:4000/todos')\n.then(response => {\n    this.setState({todos: response.data});\n})\n.catch(function (error){\n    console.log(error)\n})\n    }\n    \n    componentDidUpdate(){\n        axios.get('http://localhost:4000/todos')\n.then(response => {\n    this.setState({todos: response.data});\n})\n.catch(function (error){\n    console.log(error)\n})\n    }\n\ntodoList() {\n    return this.state.todos.map(function(currentTodo,i){\n        return <Todo todo={currentTodo} key={i}/>;\n    })\n}\n\n    render() {\n        return (\n            <div>\n                <h3>Todos List</h3>\n                <table className=\"table table-striped\" style={{marginTop:20}}>\n                    <thead>\n                        <tr>\n                            <th>Descriptions</th>\n                            <th>Responsible</th>\n                            <th>Priority</th>\n                            <th>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.todoList()}\n                    </tbody>\n                </table>\n                \n\n                \n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport axios from 'axios';\n\nexport default class EditTodo extends Component {\n    constructor(props) {\n        super(props);\n\nthis.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\nthis.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\nthis.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\nthis.onChangeTodoCompleted = this.onChangeTodoCompleted.bind(this);\nthis.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        }\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/todos/' + this.props.match.params.id)\n            .then(response => {\n                this.setState({\n                    todo_description: response.data.todo_description,\n                    todo_responsible: response.data.todo_responsible,\n                    todo_priority: response.data.todo_priority,\n                    todo_completed: response.data.todo_completed\n                })\n\n            })\n            .catch(function (error) {\n                console.log(error)\n            })\n    }\n\n    onChangeTodoDescription(e){\n        this.setState({\n            todo_description:e.target.value\n        });\n    }\n    onChangeTodoResponsible(e){\n        this.setState({\n            todo_responsible:e.target.value\n        });\n    }\n    onChangeTodoPriority(e){\n        this.setState({\n            todo_priority:e.target.value\n        });\n    }\n    onChangeTodoCompleted(e){\n        this.setState({\n            todo_completed:!this.state.todo_completed\n        });\n    }\n    onSubmit(e){\n        e.preventDefault();\n        const obj ={\n            todo_description: this.state.todo_description,\n            todo_responsible: this.state.todo_responsible,\n            todo_priority: this.state.todo_priority,\n            todo_completed: this.state.todo_completed\n        }\n        axios.post('http://localhost:4000/todos/update/'+this.props.match.params.id, obj)\n                .then(res=> console.log(res.data));\n\n    this.props.history.push('/');\n    }\n    render() {\n        return (\n            <div>\n\n                <h3>Update Todo</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Description:</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.todo_description}\n                            onChange={this.onChangeTodoDescription}\n                        />\n                    </div>\n\n\n\n                    <div className=\"form-group\">\n                        <label>Responsible:</label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.todo_responsible}\n                            onChange={this.onChangeTodoResponsible}\n                        />\n\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input type=\"radio\"\n                                className=\" form-check form-check-inline\"\n                                name=\"priorityOptions\"\n                                id=\"priorityLow\"\n                                value=\"Low\"\n                                checked={this.state.todo_priority === 'Low'}\n                                onChange={this.onChangeTodoPriority}\n                            />\n                            <label className=\"form-check-label\">Low</label>\n                        </div>\n                        <div>\n                            <input type=\"radio\"\n                                className=\" form-check form-check-inline\"\n                                name=\"priorityOptions\"\n                                id=\"priorityMedium\"\n                                value=\"Medium\"\n                                checked={this.state.todo_priority === 'Medium'}\n                                onChange={this.onChangeTodoPriority}\n                            />\n                            <label className=\"form-check-label\">Medium</label>\n                        </div>\n                        <div>\n                            <input type=\"radio\"\n                                className=\" form-check form-check-inline\"\n                                name=\"priorityOptions\"\n                                id=\"priorityHigh\"\n                                value=\"High\"\n                                checked={this.state.todo_priority === 'High'}\n                                onChange={this.onChangeTodoPriority}\n                            />\n                            <label className=\"form-check-label\">High</label>\n                        </div>\n                        <div className=\"form-check\">\n                            <input  type=\"checkbox\"\n                                    className=\"form-check-input\"\n                                    id=\"completedCheckbox\"\n                                    name=\"completedCheckbox\"\n                                    onChange={this.onChangeTodoCompleted}\n                                    checked={this.state.todo_completed}\n                                    value={this.state.todo_completed}\n                            />\n                            <label className=\"form-check-label\" htmlFor=\"completedCheckbox\">\n                                Completed\n                            </label>\n\n                        </div>\n                        <br/>\n                        <div className=\"form-group\">\n                            <input  type=\"submit\"\n                                    value=\"Update Todo\"\n                                    className=\"btn btn-primary\"\n                            />\n                        </div>\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nexport default class CreateTodo extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeTodoDescription = this.onChangeTodoDescription.bind(this);\n        this.onChangeTodoPriority = this.onChangeTodoPriority.bind(this);\n        this.onChangeTodoResponsible = this.onChangeTodoResponsible.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n        }\n\n    }\n    onChangeTodoDescription(e) {\n        this.setState({\n            todo_description: e.target.value\n        });\n    }\n\n    onChangeTodoResponsible(e) {\n        this.setState({\n            todo_responsible: e.target.value\n        });\n    }\n    onChangeTodoPriority(e) {\n        this.setState({\n            todo_priority: e.target.value\n        });\n    }\n\n    /**\n     * *remettre a jour la state après la soumission du formulaire\n    **/\n    onSubmit(e) {\n        e.preventDefault();\n\n        console.log('form submitted');\n        console.log(`Todo description:${this.state.todo_description}`);\n        console.log(`Todo responsible:${this.state.todo_responsible}`);\n        console.log(`Todo priority:${this.state.todo_priority}`);\n        console.log(`Todo completed:${this.state.todo_completed}`);\n\nconst newTodo = {\n    todo_description: this.state.todo_description,\n    todo_responsible: this.state.todo_responsible,\n    todo_priority: this.state.todo_priority,\n    todo_completed: this.state.todo_completed\n\n}\n\naxios.post('http://localhost:4000/todos/add',newTodo)\n        .then(res => console.log(res.data));\n\n        this.setState({\n\n            todo_description: '',\n            todo_responsible: '',\n            todo_priority: '',\n            todo_completed: false\n\n        })\n    }\n\n    render() {\n        return (\n            <div style={{ marginTop: 20 }}>\n\n                <h3>Create New Todo</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Description: </label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.todo_description}\n                            onChange={this.onChangeTodoDescription} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Responsible: </label>\n                        <input type=\"text\"\n                            className=\"form-control\"\n                            value={this.state.todo_responsible}\n                            onChange={this.onChangeTodoResponsible} />\n                    </div>\n                    <div className=\"form-group\">\n                        <div className=\"form-check form-check-inline\">\n                            <input type=\"radio\"\n                                className=\" form-check form-check-inline\"\n                                name=\"priorityOptions\"\n                                id=\"priorityLow\"\n                                value=\"Low\"\n                                checked={this.state.todo_priority === 'Low'}\n                                onChange={this.onChangeTodoPriority}\n                            />\n                            <label className=\"form-check-label\">Low</label>\n                        </div>\n                        <div>\n                            <input type=\"radio\"\n                                className=\" form-check form-check-inline\"\n                                name=\"priorityOptions\"\n                                id=\"priorityMedium\"\n                                value=\"Medium\"\n                                checked={this.state.todo_priority === 'Medium'}\n                                onChange={this.onChangeTodoPriority}\n                            />\n                            <label className=\"form-check-label\">Medium</label>\n                        </div>\n                        <div>\n                            <input type=\"radio\"\n                                className=\" form-check form-check-inline\"\n                                name=\"priorityOptions\"\n                                id=\"priorityHigh\"\n                                value=\"High\"\n                                checked={this.state.todo_priority === 'High'}\n                                onChange={this.onChangeTodoPriority}\n                            />\n                            <label className=\"form-check-label\">High</label>\n                        </div>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Create Todo\" className=\"btn btn-primary \" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n","import React from 'react';\n\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport logorugby from \"./resources/logorugby.png\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport TodosList from \"./components/TodosList\";\nimport EditTodo from \"./components/EditTodo\";\nimport CreateTodo from \"./components/CreateTodo\";\n\nfunction App() {\n  return (\n\n    <Router>\n      <div className=\"container\">\n\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <a href=\"https://www.google.com/\" className=\"navbar-brand\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <img src={logorugby} alt=\"logo rugby\" width=\"30\" height=\"30\" />\n          </a>\n          <Link to=\"/\" className=\"navbar-brand\"> Mern-Stack Todo app</Link>\n          <div >\n            <ul className=\"navbar-nav mr-auto\">\n              <li className=\"navbar-item\">\n                <Link to=\"/\" className=\"nav-link\">Todos</Link>\n              </li>\n              <li className=\"navbar-item\">\n                <Link to=\"/create\" className=\"nav-link\">Create Todo</Link>\n              </li>\n            </ul>\n\n          </div>\n\n        </nav>\n\n        <h2>MERN-Stack Todo App</h2>\n        <Route path=\"/\" exact component={TodosList} />\n        <Route path=\"/edit/:id\" component={EditTodo} />\n        <Route path=\"/create\" component={CreateTodo} />\n      </div>\n\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}